name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master
      - 'release-**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

concurrency:
  # Interrupt this workflow for new launches from the development branch.
  # For launches from the main branch, wait until previous instances complete.
  # @SEE: https://github.com/tarantool/message-queue-ee/pull/239
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  DEV_DIR: /opt/test/debug
  RELEASE_DIR: /opt/test/release
  DEBUG_DIR: $DEBUG_PATH/$RELEASE_PATH
  IMAGE: ghcr.io/palage4a/dotfiles

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - uses: hmarr/debug-action@v3
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - run: |
          echo $(git -C $(pwd) rev-parse --is-inside-work-tree)
          echo "TEST" $(git describe --tags)
          echo ${{ env.DEV_DIR}}
          echo ${{ env.RELEASE_DIR}}
          echo ${{ env.DEBUG_DIR}}
  debug-rev-parse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - run: |
          echo $(git -C $(pwd) rev-parse --is-inside-work-tree)
      - run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - run: |
          echo $(git -C $(pwd) rev-parse --is-inside-work-tree)

  setup-environment:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: test
    outputs:
      IMAGE: ${{ env.IMAGE }}
      VERSION: ${{ steps.set-env.outputs.VERSION}}
      DEST_PATH: ${{ steps.set-env.outputs.DEST_PATH}}
    steps:
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - name: Set environment variable
        id: set-env
        run: |
          export VERSION=$(git describe --tags)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          if ${{ github.ref_type == 'tag' }}; then
            echo "DEST_PATH=${{ env.RELEASE_DIR }}/$VERSION" >> $GITHUB_OUTPUT
          else
            echo "DEST_PATH=${{ env.DEV_DIR }}">> $GITHUB_OUTPUT
          fi
          echo "with gh env: ${{ env.DEV_DIR}}"
          echo "with os env: $DEV_DIR"
          echo "with os env curly: ${DEV_DIR}"
  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 15
    needs:
      - setup-environment
      - test
    steps:
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - run: |
          echo "PUBLISH TO ${{ needs.setup-environment.outputs.DEST_PATH}}"
          echo "VERSION ${{ needs.setup-environment.outputs.VERSION }}"
  docker:
    runs-on: ubuntu-latest
    needs: [test, setup-environment]
    steps:
      - run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Set up Docker Context for Buildx
        id: docker-context
        run: docker context create buildx-context
      - uses: docker/setup-buildx-action@v3
        with:
          endpoint: buildx-context
          platforms: linux/amd64
      - name: Login to Delivery Container Registry
        id: docker-registry-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        id: build-docker-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ needs.setup-environment.outputs.VERSION}}
      - name: Save to tarball
        id: save-image-tarball
        run: |
          docker save ${{ env.IMAGE }} | gzip > dotfiles.${{ needs.setup-environment.outputs.VERSION}}.tar.gz

  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 15
    needs: [setup-environment, publish]
    container:
      image: ${{needs.setup-environment.outputs.IMAGE}}:${{ needs.setup-environment.outputs.VERSION }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: |
          ls
          echo "VALIDATE FROM ${{ needs.setup-environment.outputs.DEST_PATH }}"

