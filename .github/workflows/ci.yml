name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master
      - 'release-**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

concurrency:
  # Interrupt this workflow for new launches from the development branch.
  # For launches from the main branch, wait until previous instances complete.
  # @SEE: https://github.com/tarantool/message-queue-ee/pull/239
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - uses: hmarr/debug-action@v3
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - run: |
          echo "TEST" $(git describe --tags)
  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 15
    outputs:
      DEST_PATH: ${{ steps.set-environment.outputs.DEST_PATH }}
    needs:
      - test
    steps:
      - name: Set dev/release environment
        id: set-environment
        run: |
          if ${{ github.ref_type == 'tag' }}; then
            echo "DEST_PATH=release_path" >> $GITHUB_OUTPUT
          else
            echo "DEST_PATH=dev_path" >> $GITHUB_OUTPUT
          fi
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
      - run: |
          echo "PUBLISH TO ${{ steps.set-environment.outputs.DEST_PATH}}"
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Set up Docker Context for Buildx
        id: docker-context
        run: docker context create buildx-context
      - uses: docker/setup-buildx-action@v3
        with:
          endpoint: buildx-context
          platforms: linux/amd64
      - name: Login to Delivery Container Registry
        id: docker-registry-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        id: build-docker-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
      - name: Save to tarball
        id: save-image-tarball
        run: |
          docker save ghcr.io/${{ github.repository }}:latest | gzip > dotfiles.latest.tar.gz

  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 15
    needs: publish
    steps:
      - run: |
          echo "VALIDATE FROM ${{needs.publish.outputs.DEST_PATH}}"

